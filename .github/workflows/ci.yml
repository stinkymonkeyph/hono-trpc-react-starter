name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Lint frontend
        run: npm run lint --workspace=@starter/web

      - name: Type check backend
        run: npm run build --workspace=@starter/backend

      - name: Type check frontend
        run: npm run build --workspace=@starter/web

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Setup test database
        working-directory: packages/backend
        run: |
          npm run db:generate
          npm run db:push

      - name: Build backend
        run: npm run build --workspace=@starter/backend

      - name: Run backend tests (if available)
        working-directory: packages/backend
        run: npm test --if-present

  build:
    name: Build All Packages
    runs-on: ubuntu-latest
    needs: [lint, test-backend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Setup database for build
        working-directory: packages/backend
        run: |
          npm run db:generate
          npm run db:push

      - name: Build backend
        run: npm run build --workspace=@starter/backend

      - name: Build frontend
        run: npm run build --workspace=@starter/web

      - name: Upload backend build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backend-build
          path: packages/backend/dist
          retention-days: 7

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: packages/web/dist
          retention-days: 7



# .github/workflows/dependency-updates.yml
---
name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Update dependencies
        run: |
          npm update
          npm audit fix --force

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'chore: automated dependency updates'
          body: |
            Automated dependency updates by GitHub Actions
            
            - Updated npm dependencies
            - Fixed security vulnerabilities
            
            Please review changes before merging.
          branch: dependency-updates
          delete-branch: true

# .github/workflows/release.yml
---
name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build all packages
        run: |
          cd packages/backend && npm run db:generate && cd ../..
          npm run build

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## What's Changed
            
            ### Features
            - Feature updates go here
            
            ### Bug Fixes  
            - Bug fixes go here
            
            ### Dependencies
            - Dependency updates go here
            
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/v1.0.0...${{ github.ref }}
          draft: false
          prerelease: false

# Instructions for setup:
# 1. Create the .github/workflows directory:
#    mkdir -p .github/workflows
# 
# 2. Save each workflow as separate files:
#    - .github/workflows/ci.yml (main CI/CD pipeline)
#    - .github/workflows/dependency-updates.yml (automated dependency updates)
#    - .github/workflows/release.yml (release automation)
#
# 3. Commit and push:
#    git add .github/
#    git commit -m "ci: add GitHub Actions workflows for CI/CD, dependency updates, and releases"
#    git push
#
# 4. Optional: Add branch protection rules in GitHub:
#    - Go to Settings > Branches
#    - Add rule for main branch
#    - Require status checks to pass before merging
#    - Select the CI jobs that must pass
